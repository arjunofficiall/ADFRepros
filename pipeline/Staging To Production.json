{
	"name": "Staging To Production",
	"properties": {
		"activities": [
			{
				"name": "For Each Table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Table List",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Table List').output.childItems",
						"type": "Expression"
					},
					"batchCount": 10,
					"activities": [
						{
							"name": "Copy To Staging",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Get Table Query",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:45:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "Staging/@{toUpper(pipeline().parameters.TimeZone)}/@{item().name}",
											"type": "Expression"
										},
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "SqlDWSink",
									"allowPolyBase": true,
									"polyBaseSettings": {
										"rejectValue": 0,
										"rejectType": "value",
										"useTypeDefault": false
									},
									"disableMetricsCollection": false
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "QuorumDataLake",
										"type": "LinkedServiceReference"
									},
									"path": "xsellerator/temp"
								}
							},
							"inputs": [
								{
									"referenceName": "DataLake",
									"type": "DatasetReference",
									"parameters": {
										"FileSystem": "xsellerator",
										"Directory": {
											"value": "Staging/@{toUpper(pipeline().parameters.TimeZone)}/@{item().name}",
											"type": "Expression"
										},
										"File": "*.parquet"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSQLDatabase",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@{item().name}Staging",
											"type": "Expression"
										},
										"SchemaName": "xs"
									}
								}
							]
						},
						{
							"name": "Merge Files to Data Lake",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Get Table Query",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "Staging/@{toUpper(pipeline().parameters.TimeZone)}/@{item().name}",
											"type": "Expression"
										},
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings",
										"copyBehavior": "MergeFiles"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DataLake",
									"type": "DatasetReference",
									"parameters": {
										"FileSystem": "xsellerator",
										"Directory": {
											"value": "Staging/@{toUpper(pipeline().parameters.TimeZone)}/@{item().name}",
											"type": "Expression"
										},
										"File": "*.parquet"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DataLake",
									"type": "DatasetReference",
									"parameters": {
										"FileSystem": "xsellerator",
										"Directory": {
											"value": "Data/@{item().name}/@{formatDateTime(utcnow(),'yyyy')}/@{formatDateTime(utcnow(),'MM')}/@{formatDateTime(utcnow(),'dd')}",
											"type": "Expression"
										},
										"File": {
											"value": "@{item().name}-@{pipeline().RunId}.parquet",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Get Table Query",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"dataset": {
									"referenceName": "DataLake",
									"type": "DatasetReference",
									"parameters": {
										"FileSystem": "xsellerator",
										"Directory": "Internal/Tables",
										"File": {
											"value": "@{item().name}.parquet",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "Delete Staging Folder",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy To Production",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Merge Files to Data Lake",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DeleteStagingFolders",
									"type": "DatasetReference",
									"parameters": {
										"StagingFolder": {
											"value": "Staging/@{toUpper(pipeline().parameters.TimeZone)}/@{item().name}",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "QuorumDataLake",
										"type": "LinkedServiceReference"
									},
									"path": "xsellerator/TempFiles"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Copy To Production",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy To Staging",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "xs.pCopy@{item().name}",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"TimeZone": {
										"value": {
											"value": "@pipeline().parameters.TimeZone",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSynapseAnalytics",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Get Table List",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Log Initial Status",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DataLake",
						"type": "DatasetReference",
						"parameters": {
							"FileSystem": "xsellerator",
							"Directory": {
								"value": "Staging/@{toUpper(pipeline().parameters.TimeZone)}",
								"type": "Expression"
							},
							"File": "*"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			},
			{
				"name": "Log Initial Status",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Log_Pipeline_Events_Initial]",
					"storedProcedureParameters": {
						"PipelineName": {
							"value": "Staging To Production",
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Timezone": {
							"value": {
								"value": "@pipeline().parameters.Timezone",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Success Event",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "For Each Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Log_Pipeline_Events_End_Success]",
					"storedProcedureParameters": {
						"RunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"TimeZone": {
				"type": "string"
			},
			"receiver": {
				"type": "string",
				"defaultValue": "siddartha.gondhi@quoruminfotech.com"
			}
		},
		"folder": {
			"name": "XSellerator/Pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2023-09-20T04:29:25Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}