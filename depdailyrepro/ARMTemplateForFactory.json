{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "depdailyrepro"
		},
		"AzureSqlDBsink_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDBsink'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase2'"
		},
		"LS_SAP_CDC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SAP_CDC'"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"simstwus2uatdata_sm_afs_uat_ftp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'simstwus2uatdata_sm_afs_uat_ftp'"
		},
		"AzureBlobStorage1_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobStorage1'"
		},
		"AzureSqlDBsink_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlreproserver.database.windows.net"
		},
		"AzureSqlDBsink_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adworksDB"
		},
		"AzureSqlDBsink_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sadmin"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlreproserver.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2019 (1)"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sadmin"
		},
		"AzureSqlDatabase2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlreproserver.database.windows.net"
		},
		"AzureSqlDatabase2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2019 (1)"
		},
		"AzureSqlDatabase2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sadmin"
		},
		"LS_SAP_CDC_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "400"
		},
		"LS_SAP_CDC_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Z_RPT_ECP"
		},
		"LS_SAP_CDC_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sapperp01.clearwater.ca"
		},
		"LS_SAP_CDC_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "JAYREPRO"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PartitionSQL Repro')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Partition_Repro",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SQL": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "AAResolve",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Partition_Repro')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/AAResolve')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_output_count_issue')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "adf_output_count_issue_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source2": {},
									"sink2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "AAResolve",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-28T14:25:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/adf_output_count_issue_dataflow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/AAResolve')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTablesink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDBsink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "INFORMATION_SCHEMA",
					"table": "CHECK_CONSTRAINTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDBsink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTablesoruce')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CONSTRAINT_CATALOG",
						"type": "nvarchar"
					},
					{
						"name": "CONSTRAINT_SCHEMA",
						"type": "nvarchar"
					},
					{
						"name": "CONSTRAINT_NAME",
						"type": "nvarchar"
					},
					{
						"name": "CHECK_CLAUSE",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INFORMATION_SCHEMA",
					"table": "CHECK_CONSTRAINTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binarysink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "airflow"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobStorage1_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDBsink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDBsink_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDBsink_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDBsink_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDBsink_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AAResolve",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AAResolve')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AAResolve",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AAResolve')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase2_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase2_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AAResolve",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AAResolve')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SAP_CDC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapOdp",
				"typeProperties": {
					"clientId": "[parameters('LS_SAP_CDC_properties_typeProperties_clientId')]",
					"sncMode": false,
					"userName": "[parameters('LS_SAP_CDC_properties_typeProperties_userName')]",
					"subscriberName": "Azure_Data_Factory",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SAP_CDC_password')]"
					},
					"server": "[parameters('LS_SAP_CDC_properties_typeProperties_server')]",
					"systemNumber": "[parameters('LS_SAP_CDC_properties_typeProperties_systemNumber')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "bt73851.central-india.azure",
					"user": "vittalreddyp",
					"database": "[parameters('Snowflake1_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SNFLAKEIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SNFLAKEIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/simstwus2uatdata_sm_afs_uat_ftp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('simstwus2uatdata_sm_afs_uat_ftp_connectionString')]",
					"fileShare": "sm-afs-uat-ftp"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_DAILY')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-07-13T07:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AAResolve')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SNFLAKEIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestAirflow')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Airflow",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"computeSize": "Large",
						"extraNodes": 0,
						"enableAutoscale": false
					},
					"airflowProperties": {
						"airflowVersion": "2.6.3",
						"airflowEnvironmentVariables": null,
						"airflowRequirements": [],
						"enableAADIntegration": true,
						"enableTriggerers": false,
						"userName": null,
						"password": null,
						"airflowEntityReferences": [],
						"encryptedSecrets": [],
						"secrets": null
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Partition_Repro')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"name": "SQL",
							"description": "Import data from BrandBlobStorage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTablesink",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'sys',",
						"     tableName: 'all_columns',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     partitionBy('roundRobin', 2)) ~> SQL",
						"SQL sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputAssertFailedRows: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTablesink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_output_count_issue_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTablesink",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          DOMAIN_CATALOG as string,",
						"          DOMAIN_SCHEMA as string,",
						"          DOMAIN_NAME as string,",
						"          DATA_TYPE as string,",
						"          CHARACTER_MAXIMUM_LENGTH as integer,",
						"          CHARACTER_OCTET_LENGTH as integer,",
						"          COLLATION_CATALOG as string,",
						"          COLLATION_SCHEMA as string,",
						"          COLLATION_NAME as string,",
						"          CHARACTER_SET_CATALOG as string,",
						"          CHARACTER_SET_SCHEMA as string,",
						"          CHARACTER_SET_NAME as string,",
						"          NUMERIC_PRECISION as integer,",
						"          NUMERIC_PRECISION_RADIX as short,",
						"          NUMERIC_SCALE as integer,",
						"          DATETIME_PRECISION as short,",
						"          DOMAIN_DEFAULT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'INFORMATION_SCHEMA',",
						"     tableName: 'DOMAINS',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     partitionBy('roundRobin', 2),",
						"     fileSystem: 'pipelines',",
						"     folderPath: 'adf_issue/in',",
						"     fileName: 'input.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> source2",
						"source2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     dateFormat:'MM/dd/yyyy',",
						"     timestampFormat:'MM/dd/yyyy',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          DOMAIN_CATALOG,",
						"          DOMAIN_SCHEMA,",
						"          DOMAIN_NAME,",
						"          DATA_TYPE,",
						"          CHARACTER_MAXIMUM_LENGTH,",
						"          CHARACTER_OCTET_LENGTH,",
						"          COLLATION_CATALOG,",
						"          COLLATION_SCHEMA,",
						"          COLLATION_NAME,",
						"          CHARACTER_SET_CATALOG,",
						"          CHARACTER_SET_SCHEMA,",
						"          CHARACTER_SET_NAME,",
						"          NUMERIC_PRECISION,",
						"          NUMERIC_PRECISION_RADIX,",
						"          NUMERIC_SCALE,",
						"          DATETIME_PRECISION,",
						"          DOMAIN_DEFAULT",
						"     ),",
						"     partitionBy('roundRobin', 2),",
						"     fileSystem: 'pipelines',",
						"     folderPath: 'adf_issue/out/one_partition',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTablesink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}